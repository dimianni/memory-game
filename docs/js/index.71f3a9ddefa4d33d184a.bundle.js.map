{"version":3,"sources":["webpack://my-webpack-configuration/webpack/bootstrap","webpack://my-webpack-configuration/webpack/runtime/global","webpack://my-webpack-configuration/webpack/runtime/publicPath","webpack://my-webpack-configuration/./src/index.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","addEventListener","imgConts","querySelectorAll","imgs","images","randomize","arr","i","random","Math","floor","el","gameImages","slice","reduce","a","concat","assign","forEach","img","cardsChosen","check","chosen","querySelector","push","classList","remove","flip","_this","add","setTimeout","image","init"],"mappings":"2XACIA,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCrBfJ,EAAoBO,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,G,MCAxB,IAAIC,EACAb,EAAoBO,EAAEO,gBAAeD,EAAYb,EAAoBO,EAAEQ,SAAW,IACtF,IAAIC,EAAWhB,EAAoBO,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFvB,EAAoBwB,EAAIX,EAAY,O,0DCHpCD,OAAOa,iBAAiB,oBAAoB,YAI5C,WAEI,MAAMC,EAAWV,SAASW,iBAAiB,SACrCC,EAAOZ,SAASW,iBAAiB,UACjCE,EAAS,CAAC,0BAA2B,mBAAoB,oBAAqB,uBAAwB,uBAAwB,oBAGpI,SAASC,EAAUC,GAEf,IAAK,IAAIC,EAAID,EAAIV,OAAS,EAAGW,EAAI,EAAGA,IAAK,CACrC,MAAMC,EAASC,KAAKC,MAAMD,KAAKD,UAAYD,EAAI,IACzCI,EAAKL,EAAIC,GACfD,EAAIC,GAAKD,EAAIE,GACbF,EAAIE,GAAUG,GAGtBN,EAAUD,GACV,MAAMQ,EAAaR,EAAOS,MAAM,EAAG,GAAGC,QAAO,CAACC,EAAGR,IAAMQ,EAAEC,OAAOT,EAAGA,IAAI,IAGvE,SAASU,IACLd,EAAKe,SAAQ,CAACC,EAAKZ,KACfY,EAAI1B,IAAMmB,EAAWL,MAJ7BF,EAAUO,GAOVK,IAGA,MAAMG,EAAc,GAEpB,SAASC,IAEL,MAAMjB,EAAS,GACfgB,EAAYF,SAAQI,IAChB,MAAMH,EAAMG,EAAOC,cAAc,OACjCnB,EAAOoB,KAAKL,MAGZf,EAAO,GAAGX,MAAQW,EAAO,GAAGX,KAC5B2B,EAAYF,SAAQI,IAChBA,EAAOG,UAAUC,OAAO,cAIhCN,EAAYxB,OAAS,EAGzB,SAAS+B,EAAKC,GAEVA,EAAMH,UAAUI,IAAI,WAEpBT,EAAYI,KAAKI,GAES,GAAtBR,EAAYxB,QACZkC,WAAWT,EAAO,KAK1BpB,EAASiB,SAAQa,IACbA,EAAM/B,iBAAiB,SAAS,WAC5B2B,EAAK3C,YAhEbgD,O","file":"js/index.71f3a9ddefa4d33d184a.bundle.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","import './scss/style.scss'\n\n\nimport './images/blank.png'\nimport './images/cheeseburger.png'\nimport './images/fries.png'\nimport './images/hotdog.png'\nimport './images/ice-cream.png'\nimport './images/milkshake.png'\nimport './images/pizza.png'\n\n\nwindow.addEventListener('DOMContentLoaded', function () {\n    init()\n})\n\nfunction init() {\n\n    const imgConts = document.querySelectorAll('.item')\n    const imgs = document.querySelectorAll('.image')\n    const images = ['images/cheeseburger.png', 'images/fries.png', 'images/hotdog.png', 'images/ice-cream.png', 'images/milkshake.png', 'images/pizza.png']\n\n\n    function randomize(arr) {\n        // 'i' is 5 initially \n        for (let i = arr.length - 1; i > 0; i--) {\n            const random = Math.floor(Math.random() * (i + 1)) // number from 0 to 6\n            const el = arr[i]; // saving the element with 'i' index\n            arr[i] = arr[random]; // assigning 'i' element to 'random' element  \n            arr[random] = el; // assigning initial(saved) element to 'random' element \n        }\n    }\n    randomize(images)\n    const gameImages = images.slice(0, 3).reduce((a, i) => a.concat(i, i), []);\n    randomize(gameImages);\n\n    function assign() {\n        imgs.forEach((img, i) => {\n            img.src = gameImages[i]\n        })\n    }\n    assign()\n\n\n    const cardsChosen = []\n\n    function check(){\n\n        const images = [];\n        cardsChosen.forEach(chosen => {\n            const img = chosen.querySelector('img')\n            images.push(img)\n        })\n\n        if (images[0].src !== images[1].src){\n            cardsChosen.forEach(chosen => {\n                chosen.classList.remove('clicked')\n            })\n        }\n\n        cardsChosen.length = 0; // Emptying cardsChosen array for the next picks\n    }\n\n    function flip(_this) {\n\n        _this.classList.add('clicked')\n\n        cardsChosen.push(_this)\n\n        if (cardsChosen.length == 2) {\n            setTimeout(check, 500);\n        }\n\n    }\n\n    imgConts.forEach(image => {\n        image.addEventListener('click', function () {\n            flip(this)\n        })\n    })\n\n}"],"sourceRoot":""}